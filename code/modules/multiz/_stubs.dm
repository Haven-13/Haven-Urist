/obj/effect/landmark/map_data
	name = "Map Data"
	desc = "An unknown location."
	invisibility = 101

	var/height = 1     ///< The number of Z-Levels in the map.
	var/turf/edge_type ///< What the map edge should be formed with. (null = world.turf)

// To be generated by the map_data object, don't touch!
/obj/effect/landmark/submap_data
	name = "Submap Data"
	invisibility = 101

	var/is_bad = 0
	var/obj/effect/landmark/submap_data/below
	var/obj/effect/landmark/submap_data/above

/obj/effect/landmark/submap_data/New()
	var/SMD = (locate(/obj/effect/landmark/submap_data) in loc)
	if (SMD && src != SMD)
		is_bad = 1
		crash_with("Another Submap Object already exists at [loc]!")
		return INITIALIZE_HINT_QDEL

/obj/effect/landmark/submap_data/proc/register_link_above(obj/effect/landmark/submap_data/other)
	src.above = other
	other.below = src

/obj/effect/landmark/submap_data/proc/has_below()
	return (below != null)

/obj/effect/landmark/submap_data/proc/has_above()
	return (above != null)

/obj/effect/landmark/submap_data/proc/get_bottommost_z()
	if (below)
		return below.get_bottommost_z()
	return get_z(src)

/obj/effect/landmark/submap_data/proc/get_topmost_z()
	if (above)
		return above.get_topmost_z()
	return get_z(src)

/obj/effect/landmark/submap_data/Destroy()
	if (is_bad)
		return ..()
	return QDEL_HINT_LETMELIVE // refuse to get deleted

/proc/HasSubmapData(var/z)
	return (GetSubmapData(z) != null)

/proc/GetSubmapData(var/z)
	. = (locate(/obj/effect/landmark/submap_data) in locate(1,1,z))

// FOR THE LOVE OF GOD USE THESE.  DO NOT FUCKING SPAGHETTIFY THIS.
// Use the Has*() functions if you ONLY need to check.
// If you need to do something, use Get*().
HasAbove(var/z)
HasBelow(var/z)
// These give either the turf or null.
GetAbove(var/atom/atom)
GetBelow(var/atom/atom)
