// UI menu navigation
#define HOME "home"
#define LIST "list"
#define ENTRY "entry"

/obj/machinery/disease2/isolator/
	name = "pathogenic isolator"
	density = 1
	anchored = 1
	icon = 'icons/obj/virology.dmi'
	icon_state = "isolator"
	var/isolating = 0
	var/datum/disease2/disease/virus2 = null
	var/datum/computer_file/data/virus_record/entry = null
	var/obj/item/weapon/reagent_containers/syringe/sample = null

/obj/machinery/disease2/isolator/Initialize()
	build_default_parts(/obj/item/weapon/circuitboard/isolater)
	. = ..()

/obj/machinery/disease2/isolator/update_icon()
	if (stat & (BROKEN|NOPOWER))
		icon_state = "isolator"
		return

	if (isolating)
		icon_state = "isolator_processing"
	else if (sample)
		icon_state = "isolator_in"
	else
		icon_state = "isolator"

/obj/machinery/disease2/isolator/attackby(var/obj/O as obj, var/mob/user)
	if(!istype(O,/obj/item/weapon/reagent_containers/syringe)) return ..()
	if(sample)
		to_chat(user, "\The [src] is already loaded.")
		return
	if(!user.unEquip(O, src))
		return
	sample = O

	user.visible_message("[user] adds \a [O] to \the [src]!", "You add \a [O] to \the [src]!")
	SStgui.update_uis(src)
	update_icon()

	src.attack_hand(user)

/obj/machinery/disease2/isolator/attack_hand(mob/user as mob)
	if(stat & (NOPOWER|BROKEN))
		return
	return ..()

/obj/machinery/disease2/isolator/ui_interact(mob/user, var/datum/tgui/ui)
	ui = SStgui.try_update_ui(user, src, ui)
	if (!ui)
		ui = new(user, src, "virology/PathogenicIsolator")
		ui.open()

/obj/machinery/disease2/isolator/ui_data(mob/user)
	. = list(
		"syringe_inserted" = !!sample,
		"isolating" = isolating,
		"pathogen_pool" = null,
		"entry" = entry
	)

	if (sample)
		var/list/pathogen_pool[0]
		for(var/datum/reagent/blood/B in sample.reagents.reagent_list)
			var/list/virus = B.data["virus2"]
			for (var/ID in virus)
				var/datum/disease2/disease/V = virus[ID]
				var/datum/computer_file/data/virus_record/R = null
				if (ID in virusDB)
					R = virusDB[ID]

				var/weakref/W = B.data["donor"]
				var/mob/living/carbon/human/D = W.resolve()
				pathogen_pool.Add(list(list(
					"name" = "[D ? D.get_species() : "Unidentified"] [B.name]",
					"dna" = B.data["blood_DNA"],
					"unique_id" = V.uniqueID,
					"reference" = REF(V),
					"is_in_database" = !!R,
					"record" = REF(R)
					)))

		if (pathogen_pool.len > 0)
			.["pathogen_pool"] = pathogen_pool

	var/list/db[0]
	for (var/ID in virusDB)
		var/datum/computer_file/data/virus_record/r = virusDB[ID]
		db.Add(list(list(
			"name" = r.fields["name"],
			"description" = replacetext(r.fields["description"], "\n", ""),
			"record" = REF(r)
			)))

	if (db.len > 0)
		.["database"] = db

/obj/machinery/disease2/isolator/Process()
	if (isolating > 0)
		isolating -= 1
		if (isolating == 0)
			if (virus2)
				var/obj/item/weapon/virusdish/d = new /obj/item/weapon/virusdish(src.loc)
				d.virus2 = virus2.getcopy()
				virus2 = null
				ping("\The [src] pings, \"Viral strain isolated.\"")
			update_icon()

/obj/machinery/disease2/isolator/ui_act(action, list/params)
	switch(action)
		if ("print")
			print(usr, params["print"])
			. = TRUE
		if ("isolate")
			var/datum/disease2/disease/V = locate(params["isolate"])
			if (V)
				virus2 = V
				isolating = 20
			. = TRUE
		if ("eject")
			sample.dropInto(loc)
			sample = null
			. = TRUE
	if (.)
		update_icon()

/obj/machinery/disease2/isolator/proc/print(mob/user, state)
	var/obj/item/weapon/paper/P = new /obj/item/weapon/paper(loc)

	switch (state)
		if (HOME)
			if (!sample) return
			P.SetName("paper - Patient Diagnostic Report")
			P.info = {"
				[virology_letterhead("Patient Diagnostic Report")]
				<center><small><font color='red'><b>CONFIDENTIAL MEDICAL REPORT</b></font></small></center><br>
				<large><u>Sample:</u></large> [sample.name]<br>
"}

			if (user)
				P.info += "<u>Generated By:</u> [user.name]<br>"

			P.info += "<hr>"

			for(var/datum/reagent/blood/B in sample.reagents.reagent_list)
				var/weakref/W = B.data["donor"]
				var/mob/living/carbon/human/D = W.resolve()
				P.info += "<large><u>[D ? D.get_species() : "Unidentified"] [B.name]:</u></large><br>[B.data["blood_DNA"]]<br>"

				var/list/virus = B.data["virus2"]
				P.info += "<u>Pathogens:</u> <br>"
				if (virus.len > 0)
					for (var/ID in virus)
						var/datum/disease2/disease/V = virus[ID]
						P.info += "[V.name()]<br>"
				else
					P.info += "None<br>"

			P.info += {"
			<hr>
			<u>Additional Notes:</u>&nbsp;
"}

		if (LIST)
			P.SetName("paper - Virus List")
			P.info = {"
				[virology_letterhead("Virus List")]
"}

			var/i = 0
			for (var/ID in virusDB)
				i++
				var/datum/computer_file/data/virus_record/r = virusDB[ID]
				P.info += "[i]. " + r.fields["name"]
				P.info += "<br>"

			P.info += {"
			<hr>
			<u>Additional Notes:</u>&nbsp;
"}

		if (ENTRY)
			P.SetName("paper - Viral Profile")
			P.info = {"
				[virology_letterhead("Viral Profile")]
				[entry.fields["description"]]
				<hr>
				<u>Additional Notes:</u>&nbsp;
"}

	state("The nearby computer prints out a report.")
